#ifndef _CARBONKEYS_H
#define _CARBONKEYS_H

#include <stdint.h>
#include <HIToolbox/Events.h>

// The contents of this file are hardware specific to a certain degree,
// but this is probably as good as we can do.
// The only hardware-independ codes we can get from X11 are keysyms,
// but those are _after_ the keyboard layout is applied, so definitely
// not something we could easily map to Carbon constants.

// Missing:
// kVK_ANSI_KeypadEquals
// kVK_Function
// kVK_F16
// kVK_F17
// kVK_F18
// kVK_F19
// kVK_F20
// kVK_Help

static const uint8_t x11ToCarbon[256] = {
    [38] = kVK_ANSI_A,
    [39] = kVK_ANSI_S,
    [40] = kVK_ANSI_D,
    [41] = kVK_ANSI_F,
    [43] = kVK_ANSI_H,
    [42] = kVK_ANSI_G,
    [52] = kVK_ANSI_Z,
    [53] = kVK_ANSI_X,
    [54] = kVK_ANSI_C,
    [55] = kVK_ANSI_V,
    [56] = kVK_ANSI_B,
    [24] = kVK_ANSI_Q,
    [25] = kVK_ANSI_W,
    [26] = kVK_ANSI_E,
    [27] = kVK_ANSI_R,
    [29] = kVK_ANSI_Y,
    [28] = kVK_ANSI_T,
    [10] = kVK_ANSI_1,
    [11] = kVK_ANSI_2,
    [12] = kVK_ANSI_3,
    [13] = kVK_ANSI_4,
    [15] = kVK_ANSI_6,
    [14] = kVK_ANSI_5,
    [21] = kVK_ANSI_Equal,
    [18] = kVK_ANSI_9,
    [16] = kVK_ANSI_7,
    [20] = kVK_ANSI_Minus,
    [17] = kVK_ANSI_8,
    [19] = kVK_ANSI_0,
    [35] = kVK_ANSI_RightBracket,
    [32] = kVK_ANSI_O,
    [30] = kVK_ANSI_U,
    [34] = kVK_ANSI_LeftBracket,
    [31] = kVK_ANSI_I,
    [33] = kVK_ANSI_P,
    [46] = kVK_ANSI_L,
    [44] = kVK_ANSI_J,
    [48] = kVK_ANSI_Quote,
    [45] = kVK_ANSI_K,
    [47] = kVK_ANSI_Semicolon,
    [51] = kVK_ANSI_Backslash,
    [59] = kVK_ANSI_Comma,
    [61] = kVK_ANSI_Slash,
    [57] = kVK_ANSI_N,
    [58] = kVK_ANSI_M,
    [60] = kVK_ANSI_Period,
    [49] = kVK_ANSI_Grave,
    [91] = kVK_ANSI_KeypadDecimal,
    [63] = kVK_ANSI_KeypadMultiply,
    [86] = kVK_ANSI_KeypadPlus,
    [77] = kVK_ANSI_KeypadClear,
    [106] = kVK_ANSI_KeypadDivide,
    [104] = kVK_ANSI_KeypadEnter,
    [82] = kVK_ANSI_KeypadMinus,
    [90] = kVK_ANSI_Keypad0,
    [87] = kVK_ANSI_Keypad1,
    [88] = kVK_ANSI_Keypad2,
    [89] = kVK_ANSI_Keypad3,
    [83] = kVK_ANSI_Keypad4,
    [84] = kVK_ANSI_Keypad5,
    [85] = kVK_ANSI_Keypad6,
    [79] = kVK_ANSI_Keypad7,
    [80] = kVK_ANSI_Keypad8,
    [81] = kVK_ANSI_Keypad9,
    [36] = kVK_Return,
    [23] = kVK_Tab,
    [65] = kVK_Space,
    [22] = kVK_Delete,
    [9] = kVK_Escape,
    [64] = kVK_Command,
    [50] = kVK_Shift,
    [66] = kVK_CapsLock,
    [133] = kVK_Option,
    [37] = kVK_Control,
    [62] = kVK_RightShift,
    [134] = kVK_RightOption,
    [105] = kVK_RightControl,
    [123] = kVK_VolumeUp,
    [122] = kVK_VolumeDown,
    [121] = kVK_Mute,
    [71] = kVK_F5,
    [72] = kVK_F6,
    [73] = kVK_F7,
    [69] = kVK_F3,
    [74] = kVK_F8,
    [75] = kVK_F9,
    [95] = kVK_F11,
    [107] = kVK_F13,
    [78] = kVK_F14,
    [76] = kVK_F10,
    [96] = kVK_F12,
    [127] = kVK_F15,
    [110] = kVK_Home,
    [112] = kVK_PageUp,
    [119] = kVK_ForwardDelete,
    [70] = kVK_F4,
    [115] = kVK_End,
    [68] = kVK_F2,
    [117] = kVK_PageDown,
    [67] = kVK_F1,
    [113] = kVK_LeftArrow,
    [114] = kVK_RightArrow,
    [116] = kVK_DownArrow,
    [111] = kVK_UpArrow,
};

static const uint8_t carbonToX11[256] = {
    [kVK_ANSI_A] = 38,
    [kVK_ANSI_S] = 39,
    [kVK_ANSI_D] = 40,
    [kVK_ANSI_F] = 41,
    [kVK_ANSI_H] = 43,
    [kVK_ANSI_G] = 42,
    [kVK_ANSI_Z] = 52,
    [kVK_ANSI_X] = 53,
    [kVK_ANSI_C] = 54,
    [kVK_ANSI_V] = 55,
    [kVK_ANSI_B] = 56,
    [kVK_ANSI_Q] = 24,
    [kVK_ANSI_W] = 25,
    [kVK_ANSI_E] = 26,
    [kVK_ANSI_R] = 27,
    [kVK_ANSI_Y] = 29,
    [kVK_ANSI_T] = 28,
    [kVK_ANSI_1] = 10,
    [kVK_ANSI_2] = 11,
    [kVK_ANSI_3] = 12,
    [kVK_ANSI_4] = 13,
    [kVK_ANSI_6] = 15,
    [kVK_ANSI_5] = 14,
    [kVK_ANSI_Equal] = 21,
    [kVK_ANSI_9] = 18,
    [kVK_ANSI_7] = 16,
    [kVK_ANSI_Minus] = 20,
    [kVK_ANSI_8] = 17,
    [kVK_ANSI_0] = 19,
    [kVK_ANSI_RightBracket] = 35,
    [kVK_ANSI_O] = 32,
    [kVK_ANSI_U] = 30,
    [kVK_ANSI_LeftBracket] = 34,
    [kVK_ANSI_I] = 31,
    [kVK_ANSI_P] = 33,
    [kVK_ANSI_L] = 46,
    [kVK_ANSI_J] = 44,
    [kVK_ANSI_Quote] = 48,
    [kVK_ANSI_K] = 45,
    [kVK_ANSI_Semicolon] = 47,
    [kVK_ANSI_Backslash] = 51,
    [kVK_ANSI_Comma] = 59,
    [kVK_ANSI_Slash] = 61,
    [kVK_ANSI_N] = 57,
    [kVK_ANSI_M] = 58,
    [kVK_ANSI_Period] = 60,
    [kVK_ANSI_Grave] = 49,
    [kVK_ANSI_KeypadDecimal] = 91,
    [kVK_ANSI_KeypadMultiply] = 63,
    [kVK_ANSI_KeypadPlus] = 86,
    [kVK_ANSI_KeypadClear] = 77,
    [kVK_ANSI_KeypadDivide] = 106,
    [kVK_ANSI_KeypadEnter] = 104,
    [kVK_ANSI_KeypadMinus] = 82,
    [kVK_ANSI_Keypad0] = 90,
    [kVK_ANSI_Keypad1] = 87,
    [kVK_ANSI_Keypad2] = 88,
    [kVK_ANSI_Keypad3] = 89,
    [kVK_ANSI_Keypad4] = 83,
    [kVK_ANSI_Keypad5] = 84,
    [kVK_ANSI_Keypad6] = 85,
    [kVK_ANSI_Keypad7] = 79,
    [kVK_ANSI_Keypad8] = 80,
    [kVK_ANSI_Keypad9] = 81,
    [kVK_Return] = 36,
    [kVK_Tab] = 23,
    [kVK_Space] = 65,
    [kVK_Delete] = 22,
    [kVK_Escape] = 9,
    [kVK_Command] = 64,
    [kVK_Shift] = 50,
    [kVK_CapsLock] = 66,
    [kVK_Option] = 133,
    [kVK_Control] = 37,
    [kVK_RightShift] = 62,
    [kVK_RightOption] = 134,
    [kVK_RightControl] = 105,
    [kVK_VolumeUp] = 123,
    [kVK_VolumeDown] = 122,
    [kVK_Mute] = 121,
    [kVK_F5] = 71,
    [kVK_F6] = 72,
    [kVK_F7] = 73,
    [kVK_F3] = 69,
    [kVK_F8] = 74,
    [kVK_F9] = 75,
    [kVK_F11] = 95,
    [kVK_F13] = 107,
    [kVK_F14] = 78,
    [kVK_F10] = 76,
    [kVK_F12] = 96,
    [kVK_F15] = 127,
    [kVK_Home] = 110,
    [kVK_PageUp] = 112,
    [kVK_ForwardDelete] = 119,
    [kVK_F4] = 70,
    [kVK_End] = 115,
    [kVK_F2] = 68,
    [kVK_PageDown] = 117,
    [kVK_F1] = 67,
    [kVK_LeftArrow] = 113,
    [kVK_RightArrow] = 114,
    [kVK_DownArrow] = 116,
    [kVK_UpArrow] = 111,
};


#endif
